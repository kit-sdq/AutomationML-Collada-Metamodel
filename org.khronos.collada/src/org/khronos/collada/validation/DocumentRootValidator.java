/**
 *
 * $Id$
 */
package org.khronos.collada.validation;

import java.math.BigInteger;

import java.util.List;

import org.eclipse.emf.common.util.EMap;

import org.eclipse.emf.ecore.EObject;

import org.eclipse.emf.ecore.util.FeatureMap;

import org.khronos.collada.AccessorType;
import org.khronos.collada.AnimationClipType;
import org.khronos.collada.AnimationType;
import org.khronos.collada.AssetType;
import org.khronos.collada.BindMaterialType;
import org.khronos.collada.BoolArrayType;
import org.khronos.collada.BoxType;
import org.khronos.collada.COLLADAType;
import org.khronos.collada.CameraType;
import org.khronos.collada.CapsuleType;
import org.khronos.collada.ChannelType;
import org.khronos.collada.ControllerType;
import org.khronos.collada.ConvexMeshType;
import org.khronos.collada.CylinderType;
import org.khronos.collada.EffectType;
import org.khronos.collada.EllipsoidType;
import org.khronos.collada.ExtraType;
import org.khronos.collada.FloatArrayType;
import org.khronos.collada.ForceFieldType;
import org.khronos.collada.GeometryType;
import org.khronos.collada.IDREFArrayType;
import org.khronos.collada.ImageType;
import org.khronos.collada.InstanceControllerType;
import org.khronos.collada.InstanceEffectType;
import org.khronos.collada.InstanceGeometryType;
import org.khronos.collada.InstanceMaterialType;
import org.khronos.collada.InstancePhysicsModelType;
import org.khronos.collada.InstanceRigidBodyType;
import org.khronos.collada.InstanceRigidConstraintType;
import org.khronos.collada.InstanceWithExtra;
import org.khronos.collada.IntArrayType;
import org.khronos.collada.LibraryAnimationClipsType;
import org.khronos.collada.LibraryAnimationsType;
import org.khronos.collada.LibraryCamerasType;
import org.khronos.collada.LibraryControllersType;
import org.khronos.collada.LibraryEffectsType;
import org.khronos.collada.LibraryForceFieldsType;
import org.khronos.collada.LibraryGeometriesType;
import org.khronos.collada.LibraryImagesType;
import org.khronos.collada.LibraryLightsType;
import org.khronos.collada.LibraryMaterialsType;
import org.khronos.collada.LibraryNodesType;
import org.khronos.collada.LibraryPhysicsMaterialsType;
import org.khronos.collada.LibraryPhysicsModelsType;
import org.khronos.collada.LibraryPhysicsScenesType;
import org.khronos.collada.LibraryVisualScenesType;
import org.khronos.collada.LightType;
import org.khronos.collada.LinesType;
import org.khronos.collada.LinestripsType;
import org.khronos.collada.LookatType;
import org.khronos.collada.MaterialType;
import org.khronos.collada.MatrixType;
import org.khronos.collada.MeshType;
import org.khronos.collada.MorphType;
import org.khronos.collada.NameArrayType;
import org.khronos.collada.NodeType1;
import org.khronos.collada.ParamType4;
import org.khronos.collada.PhysicsMaterialType;
import org.khronos.collada.PhysicsModelType;
import org.khronos.collada.PhysicsSceneType;
import org.khronos.collada.PlaneType;
import org.khronos.collada.PolygonsType;
import org.khronos.collada.PolylistType;
import org.khronos.collada.ProfileCGType;
import org.khronos.collada.ProfileCOMMONType;
import org.khronos.collada.ProfileGLESType;
import org.khronos.collada.ProfileGLSLType;
import org.khronos.collada.RigidBodyType;
import org.khronos.collada.RigidConstraintType;
import org.khronos.collada.RotateType;
import org.khronos.collada.SamplerType;
import org.khronos.collada.SkewType;
import org.khronos.collada.SkinType;
import org.khronos.collada.SourceType;
import org.khronos.collada.SphereType;
import org.khronos.collada.SplineType;
import org.khronos.collada.TaperedCapsuleType;
import org.khronos.collada.TaperedCylinderType;
import org.khronos.collada.TargetableFloat3;
import org.khronos.collada.TechniqueType4;
import org.khronos.collada.TrianglesType;
import org.khronos.collada.TrifansType;
import org.khronos.collada.TristripsType;
import org.khronos.collada.VerticesType;
import org.khronos.collada.VisualSceneType;

/**
 * A sample validator interface for {@link org.khronos.collada.DocumentRoot}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface DocumentRootValidator {
	boolean validate();

	boolean validateMixed(FeatureMap value);
	boolean validateXMLNSPrefixMap(EMap<String, String> value);
	boolean validateXSISchemaLocation(EMap<String, String> value);
	boolean validateAccessor(AccessorType value);
	boolean validateAnimation(AnimationType value);
	boolean validateAnimationClip(AnimationClipType value);
	boolean validateAsset(AssetType value);
	boolean validateBindMaterial(BindMaterialType value);
	boolean validateBoolArray(BoolArrayType value);
	boolean validateBox(BoxType value);
	boolean validateCamera(CameraType value);
	boolean validateCapsule(CapsuleType value);
	boolean validateChannel(ChannelType value);
	boolean validateCOLLADA(COLLADAType value);
	boolean validateController(ControllerType value);
	boolean validateConvexMesh(ConvexMeshType value);
	boolean validateCylinder(CylinderType value);
	boolean validateEffect(EffectType value);
	boolean validateEllipsoid(EllipsoidType value);
	boolean validateExtra(ExtraType value);
	boolean validateFloatArray(FloatArrayType value);
	boolean validateForceField(ForceFieldType value);
	boolean validateFxProfileAbstract(EObject value);
	boolean validateGeometry(GeometryType value);
	boolean validateGlHookAbstract(EObject value);
	boolean validateIDREFArray(IDREFArrayType value);
	boolean validateImage(ImageType value);
	boolean validateInstanceCamera(InstanceWithExtra value);
	boolean validateInstanceController(InstanceControllerType value);
	boolean validateInstanceEffect(InstanceEffectType value);
	boolean validateInstanceForceField(InstanceWithExtra value);
	boolean validateInstanceGeometry(InstanceGeometryType value);
	boolean validateInstanceLight(InstanceWithExtra value);
	boolean validateInstanceMaterial(InstanceMaterialType value);
	boolean validateInstanceNode(InstanceWithExtra value);
	boolean validateInstancePhysicsMaterial(InstanceWithExtra value);
	boolean validateInstancePhysicsModel(InstancePhysicsModelType value);
	boolean validateInstanceRigidBody(InstanceRigidBodyType value);
	boolean validateInstanceRigidConstraint(InstanceRigidConstraintType value);
	boolean validateIntArray(IntArrayType value);
	boolean validateLibraryAnimationClips(LibraryAnimationClipsType value);
	boolean validateLibraryAnimations(LibraryAnimationsType value);
	boolean validateLibraryCameras(LibraryCamerasType value);
	boolean validateLibraryControllers(LibraryControllersType value);
	boolean validateLibraryEffects(LibraryEffectsType value);
	boolean validateLibraryForceFields(LibraryForceFieldsType value);
	boolean validateLibraryGeometries(LibraryGeometriesType value);
	boolean validateLibraryImages(LibraryImagesType value);
	boolean validateLibraryLights(LibraryLightsType value);
	boolean validateLibraryMaterials(LibraryMaterialsType value);
	boolean validateLibraryNodes(LibraryNodesType value);
	boolean validateLibraryPhysicsMaterials(LibraryPhysicsMaterialsType value);
	boolean validateLibraryPhysicsModels(LibraryPhysicsModelsType value);
	boolean validateLibraryPhysicsScenes(LibraryPhysicsScenesType value);
	boolean validateLibraryVisualScenes(LibraryVisualScenesType value);
	boolean validateLight(LightType value);
	boolean validateLines(LinesType value);
	boolean validateLinestrips(LinestripsType value);
	boolean validateLookat(LookatType value);
	boolean validateMaterial(MaterialType value);
	boolean validateMatrix(MatrixType value);
	boolean validateMesh(MeshType value);
	boolean validateMorph(MorphType value);
	boolean validateNameArray(NameArrayType value);
	boolean validateNode(NodeType1 value);
	boolean validateP(List<BigInteger> value);
	boolean validateParam(ParamType4 value);
	boolean validatePhysicsMaterial(PhysicsMaterialType value);
	boolean validatePhysicsModel(PhysicsModelType value);
	boolean validatePhysicsScene(PhysicsSceneType value);
	boolean validatePlane(PlaneType value);
	boolean validatePolygons(PolygonsType value);
	boolean validatePolylist(PolylistType value);
	boolean validateProfileCG(ProfileCGType value);
	boolean validateProfileCOMMON(ProfileCOMMONType value);
	boolean validateProfileGLES(ProfileGLESType value);
	boolean validateProfileGLSL(ProfileGLSLType value);
	boolean validateRigidBody(RigidBodyType value);
	boolean validateRigidConstraint(RigidConstraintType value);
	boolean validateRotate(RotateType value);
	boolean validateSampler(SamplerType value);
	boolean validateScale(TargetableFloat3 value);
	boolean validateSkew(SkewType value);
	boolean validateSkin(SkinType value);
	boolean validateSource(SourceType value);
	boolean validateSphere(SphereType value);
	boolean validateSpline(SplineType value);
	boolean validateTaperedCapsule(TaperedCapsuleType value);
	boolean validateTaperedCylinder(TaperedCylinderType value);
	boolean validateTechnique(TechniqueType4 value);
	boolean validateTranslate(TargetableFloat3 value);
	boolean validateTriangles(TrianglesType value);
	boolean validateTrifans(TrifansType value);
	boolean validateTristrips(TristripsType value);
	boolean validateVertices(VerticesType value);
	boolean validateVisualScene(VisualSceneType value);
}
