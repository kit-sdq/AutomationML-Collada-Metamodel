/**
 *
 * $Id$
 */
package org.khronos.collada.validation;

import java.util.List;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.util.FeatureMap;

import org.khronos.collada.AssetType;
import org.khronos.collada.ExtraType;
import org.khronos.collada.InstanceControllerType;
import org.khronos.collada.InstanceGeometryType;
import org.khronos.collada.InstanceWithExtra;
import org.khronos.collada.LookatType;
import org.khronos.collada.MatrixType;
import org.khronos.collada.NodeType;
import org.khronos.collada.NodeType1;
import org.khronos.collada.RotateType;
import org.khronos.collada.SkewType;
import org.khronos.collada.TargetableFloat3;

/**
 * A sample validator interface for {@link org.khronos.collada.NodeType1}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface NodeType1Validator {
	boolean validate();

	boolean validateAsset(AssetType value);
	boolean validateGroup(FeatureMap value);
	boolean validateLookat(EList<LookatType> value);
	boolean validateMatrix(EList<MatrixType> value);
	boolean validateRotate(EList<RotateType> value);
	boolean validateScale(EList<TargetableFloat3> value);
	boolean validateSkew(EList<SkewType> value);
	boolean validateTranslate(EList<TargetableFloat3> value);
	boolean validateInstanceCamera(EList<InstanceWithExtra> value);
	boolean validateInstanceController(EList<InstanceControllerType> value);
	boolean validateInstanceGeometry(EList<InstanceGeometryType> value);
	boolean validateInstanceLight(EList<InstanceWithExtra> value);
	boolean validateInstanceNode(EList<InstanceWithExtra> value);
	boolean validateNode(EList<NodeType1> value);
	boolean validateExtra(EList<ExtraType> value);
	boolean validateId(String value);
	boolean validateLayer(List<String> value);
	boolean validateName(String value);
	boolean validateSid(String value);
	boolean validateType(NodeType value);
}
