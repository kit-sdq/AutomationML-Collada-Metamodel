/**
 *
 * $Id$
 */
package org.khronos.collada.validation;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.util.FeatureMap;

import org.khronos.collada.BoxType;
import org.khronos.collada.CapsuleType;
import org.khronos.collada.CylinderType;
import org.khronos.collada.ExtraType;
import org.khronos.collada.HollowType;
import org.khronos.collada.InstanceGeometryType;
import org.khronos.collada.InstanceWithExtra;
import org.khronos.collada.PhysicsMaterialType;
import org.khronos.collada.PlaneType;
import org.khronos.collada.RotateType;
import org.khronos.collada.SphereType;
import org.khronos.collada.TaperedCapsuleType;
import org.khronos.collada.TaperedCylinderType;
import org.khronos.collada.TargetableFloat;
import org.khronos.collada.TargetableFloat3;

/**
 * A sample validator interface for {@link org.khronos.collada.ShapeType}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface ShapeTypeValidator {
	boolean validate();

	boolean validateHollow(HollowType value);
	boolean validateMass(TargetableFloat value);
	boolean validateDensity(TargetableFloat value);
	boolean validateInstancePhysicsMaterial(InstanceWithExtra value);
	boolean validatePhysicsMaterial(PhysicsMaterialType value);
	boolean validateInstanceGeometry(InstanceGeometryType value);
	boolean validatePlane(PlaneType value);
	boolean validateBox(BoxType value);
	boolean validateSphere(SphereType value);
	boolean validateCylinder(CylinderType value);
	boolean validateTaperedCylinder(TaperedCylinderType value);
	boolean validateCapsule(CapsuleType value);
	boolean validateTaperedCapsule(TaperedCapsuleType value);
	boolean validateGroup(FeatureMap value);
	boolean validateTranslate(EList<TargetableFloat3> value);
	boolean validateRotate(EList<RotateType> value);
	boolean validateExtra(EList<ExtraType> value);
}
