/**
 *
 * $Id$
 */
package org.khronos.collada.validation;

import java.util.List;

import org.khronos.collada.FxSampler1DCommon;
import org.khronos.collada.FxSampler2DCommon;
import org.khronos.collada.FxSampler3DCommon;
import org.khronos.collada.FxSamplerCUBECommon;
import org.khronos.collada.FxSamplerDEPTHCommon;
import org.khronos.collada.FxSamplerRECTCommon;
import org.khronos.collada.FxSurfaceCommon;

/**
 * A sample validator interface for {@link org.khronos.collada.SetparamType1}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface SetparamType1Validator {
	boolean validate();

	boolean validateBool(boolean value);
	boolean validateBool2(List<Boolean> value);
	boolean validateBool3(List<Boolean> value);
	boolean validateBool4(List<Boolean> value);
	boolean validateInt(long value);
	boolean validateInt2(List<Long> value);
	boolean validateInt3(List<Long> value);
	boolean validateInt4(List<Long> value);
	boolean validateFloat(double value);
	boolean validateFloat2(List<Double> value);
	boolean validateFloat3(List<Double> value);
	boolean validateFloat4(List<Double> value);
	boolean validateFloat1x1(double value);
	boolean validateFloat1x2(List<Double> value);
	boolean validateFloat1x3(List<Double> value);
	boolean validateFloat1x4(List<Double> value);
	boolean validateFloat2x1(List<Double> value);
	boolean validateFloat2x2(List<Double> value);
	boolean validateFloat2x3(List<Double> value);
	boolean validateFloat2x4(List<Double> value);
	boolean validateFloat3x1(List<Double> value);
	boolean validateFloat3x2(List<Double> value);
	boolean validateFloat3x3(List<Double> value);
	boolean validateFloat3x4(List<Double> value);
	boolean validateFloat4x1(List<Double> value);
	boolean validateFloat4x2(List<Double> value);
	boolean validateFloat4x3(List<Double> value);
	boolean validateFloat4x4(List<Double> value);
	boolean validateSurface(FxSurfaceCommon value);
	boolean validateSampler1D(FxSampler1DCommon value);
	boolean validateSampler2D(FxSampler2DCommon value);
	boolean validateSampler3D(FxSampler3DCommon value);
	boolean validateSamplerCUBE(FxSamplerCUBECommon value);
	boolean validateSamplerRECT(FxSamplerRECTCommon value);
	boolean validateSamplerDEPTH(FxSamplerDEPTHCommon value);
	boolean validateEnum(String value);
	boolean validateRef(String value);
}
