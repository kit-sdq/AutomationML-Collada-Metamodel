/**
 *
 * $Id$
 */
package org.khronos.collada.validation;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.util.FeatureMap;

import org.khronos.collada.AssetType;
import org.khronos.collada.ExtraType;
import org.khronos.collada.LibraryAnimationClipsType;
import org.khronos.collada.LibraryAnimationsType;
import org.khronos.collada.LibraryCamerasType;
import org.khronos.collada.LibraryControllersType;
import org.khronos.collada.LibraryEffectsType;
import org.khronos.collada.LibraryForceFieldsType;
import org.khronos.collada.LibraryGeometriesType;
import org.khronos.collada.LibraryImagesType;
import org.khronos.collada.LibraryLightsType;
import org.khronos.collada.LibraryMaterialsType;
import org.khronos.collada.LibraryNodesType;
import org.khronos.collada.LibraryPhysicsMaterialsType;
import org.khronos.collada.LibraryPhysicsModelsType;
import org.khronos.collada.LibraryPhysicsScenesType;
import org.khronos.collada.LibraryVisualScenesType;
import org.khronos.collada.SceneType;
import org.khronos.collada.VersionType;

/**
 * A sample validator interface for {@link org.khronos.collada.COLLADAType}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface COLLADATypeValidator {
	boolean validate();

	boolean validateAsset(AssetType value);
	boolean validateGroup(FeatureMap value);
	boolean validateLibraryAnimations(EList<LibraryAnimationsType> value);
	boolean validateLibraryAnimationClips(EList<LibraryAnimationClipsType> value);
	boolean validateLibraryCameras(EList<LibraryCamerasType> value);
	boolean validateLibraryControllers(EList<LibraryControllersType> value);
	boolean validateLibraryGeometries(EList<LibraryGeometriesType> value);
	boolean validateLibraryEffects(EList<LibraryEffectsType> value);
	boolean validateLibraryForceFields(EList<LibraryForceFieldsType> value);
	boolean validateLibraryImages(EList<LibraryImagesType> value);
	boolean validateLibraryLights(EList<LibraryLightsType> value);
	boolean validateLibraryMaterials(EList<LibraryMaterialsType> value);
	boolean validateLibraryNodes(EList<LibraryNodesType> value);
	boolean validateLibraryPhysicsMaterials(EList<LibraryPhysicsMaterialsType> value);
	boolean validateLibraryPhysicsModels(EList<LibraryPhysicsModelsType> value);
	boolean validateLibraryPhysicsScenes(EList<LibraryPhysicsScenesType> value);
	boolean validateLibraryVisualScenes(EList<LibraryVisualScenesType> value);
	boolean validateScene(SceneType value);
	boolean validateExtra(EList<ExtraType> value);
	boolean validateBase(String value);
	boolean validateVersion(VersionType value);
	boolean validateProjectName(String value);
}
