/**
 *
 * $Id$
 */
package org.khronos.collada.validation;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.util.FeatureMap;

import org.khronos.collada.ExtraType;
import org.khronos.collada.LinesType;
import org.khronos.collada.LinestripsType;
import org.khronos.collada.PolygonsType;
import org.khronos.collada.PolylistType;
import org.khronos.collada.SourceType;
import org.khronos.collada.TrianglesType;
import org.khronos.collada.TrifansType;
import org.khronos.collada.TristripsType;
import org.khronos.collada.VerticesType;

/**
 * A sample validator interface for {@link org.khronos.collada.ConvexMeshType}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface ConvexMeshTypeValidator {
	boolean validate();

	boolean validateSource(EList<SourceType> value);
	boolean validateVertices(VerticesType value);
	boolean validateGroup(FeatureMap value);
	boolean validateLines(EList<LinesType> value);
	boolean validateLinestrips(EList<LinestripsType> value);
	boolean validatePolygons(EList<PolygonsType> value);
	boolean validatePolylist(EList<PolylistType> value);
	boolean validateTriangles(EList<TrianglesType> value);
	boolean validateTrifans(EList<TrifansType> value);
	boolean validateTristrips(EList<TristripsType> value);
	boolean validateExtra(EList<ExtraType> value);
	boolean validateConvexHullOf(String value);
}
